{"version":3,"sources":["api/api.ts","App.tsx","index.tsx"],"names":["getAllInfo","url","fetch","then","response","json","App","useState","todos","setTodos","visibleTodos","setVisibleTodos","loading","setLoading","loaded","setLoaded","errorMessage","setErrorMessage","sortedByTitle","setSortedByTitle","sortedByCompleted","setSortedByCompleted","sortedByUserName","setSortedByUserName","handleLoadClick","a","usersFromServer","todosFromServer","todosWithUsers","map","todo","user","find","id","userId","useEffect","className","type","onClick","sortedTodos","sort","b","title","localeCompare","reverse","Number","completed","undefined","TypeError","name","length","key","checked","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f358b392.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\nconst getAllInfo = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n};\n\nexport const getUsers = (): Promise<User[]> => {\n  return getAllInfo<User>('/users')\n};\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return getAllInfo<Todo>('/todos')\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport { getUsers, getTodos, Todo } from './api/api';\n\nconst App = () => {\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sortedByTitle, setSortedByTitle] = useState(false);\n  const [sortedByCompleted, setSortedByCompleted] = useState(false);\n  const [sortedByUserName, setSortedByUserName] = useState(false);\n\n  const handleLoadClick = async () => {\n    setLoading(true);\n\n    try {\n      const usersFromServer = await getUsers();\n      const todosFromServer = await getTodos();\n\n      const todosWithUsers = todosFromServer.map(todo => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      }));\n\n      setTodos(todosWithUsers);\n      setVisibleTodos(todosWithUsers);\n      setLoaded(true);\n    } catch (e) {\n      setErrorMessage('Loading error');\n    }\n\n    setLoading(false);\n  };\n  useEffect(() => {\n    handleLoadClick();\n  }, []);\n\n  const sortByTitle = () => {\n\n    const sortedTodos = [...todos].sort((a, b) => {\n      return a.title.localeCompare(b.title);\n    });\n\n    if (sortedByTitle) {\n      setVisibleTodos(sortedTodos.reverse());\n      setSortedByTitle(false);\n    } else {\n      setVisibleTodos(sortedTodos);\n      setSortedByTitle(true);\n    };\n\n    setSortedByCompleted(false);\n    setSortedByUserName(false);\n  };\n\n  const sortByCompleted = () => {\n    const sortedTodos = [...todos].sort((a, b) => {\n      return Number(b.completed) - Number(a.completed);\n    });\n\n    if (sortedByCompleted) {\n      setVisibleTodos(sortedTodos.reverse());\n      setSortedByCompleted(false);\n    } else {\n      setVisibleTodos(sortedTodos);\n      setSortedByCompleted(true);\n    };\n\n    setSortedByTitle(false);\n    setSortedByUserName(false);\n  };\n\n  const sortByUserName = () => {\n    const sortedTodos = [...todos].sort((a, b) => {\n      if (a.user === undefined || b.user === undefined) {\n        throw new TypeError('ERROR')\n      }\n\n      return a.user.name.localeCompare(b.user.name);\n    });\n\n    if (sortedByUserName) {\n      setVisibleTodos(sortedTodos.reverse());\n      setSortedByUserName(false);\n    } else {\n      setVisibleTodos(sortedTodos);\n      setSortedByUserName(true);\n    };\n\n    setSortedByTitle(false);\n    setSortedByCompleted(false);\n  };\n\n  const reset = () => {\n    setVisibleTodos(todos);\n    setSortedByTitle(false);\n    setSortedByCompleted(false);\n    setSortedByUserName(false);\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>Dinamic list of TODOs</h1>\n\n      <div className=\"buttons\">\n        <button type=\"button\" className=\"button\" onClick={reset}>Reset</button>\n        <button type=\"button\" className=\"button\" onClick={sortByTitle}>Sort by title</button>\n        <button type=\"button\" className=\"button\" onClick={sortByCompleted}>Sort by completed</button>\n        <button type=\"button\" className=\"button\" onClick={sortByUserName}>Sort by user</button>\n      </div>\n\n      {!loaded ? (\n        <>\n          <button type=\"button\" onClick={handleLoadClick} disabled={loading}>\n            {loading ? 'Loading...' : 'Load Information'}\n          </button>\n\n          {errorMessage && (\n            <p>\n              {errorMessage}\n            </p>\n          )}\n        </>\n      ) : (\n        todos.length > 0 ? (\n          <ul className=\"list\">\n            {visibleTodos.map(todo => (\n              <li key={todo.id} className={todo.completed ? \"completed\" : \"notCompleted\"}>\n                <input type=\"checkbox\" checked={todo.completed} disabled/>\n                {todo.title + ' '}\n                ({todo.user ? todo.user.name : 'Unknown'})\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <>\n            <button type=\"button\" onClick={handleLoadClick} disabled={loading}>\n              {loading ? 'Loading...' : 'Reload'}\n            </button>\n\n            No todos yet\n          </>\n        )\n      )}\n    </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}